openapi: 3.0.0
paths:
  /api/v1:
    get:
      operationId: AppController_getAll
      parameters: []
      responses:
        '200':
          description: ''
    post:
      operationId: AppController_create
      parameters: []
      responses:
        '201':
          description: ''
    delete:
      operationId: AppController_delete
      parameters: []
      responses:
        '200':
          description: ''
  /api/v2:
    get:
      operationId: AppController_getAll
      parameters: []
      responses:
        '200':
          description: ''
    post:
      operationId: AppController_create
      parameters: []
      responses:
        '201':
          description: ''
    delete:
      operationId: AppController_delete
      parameters: []
      responses:
        '200':
          description: ''
  /api/v1/companies:
    post:
      operationId: CompaniesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyDto'
      responses:
        '201':
          description: ''
      tags: &ref_0
        - Company
    get:
      operationId: CompaniesController_findAll
      parameters:
        - name: current
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v2/companies:
    post:
      operationId: CompaniesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyDto'
      responses:
        '201':
          description: ''
      tags: *ref_0
    get:
      operationId: CompaniesController_findAll
      parameters:
        - name: current
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v1/companies/{id}:
    get:
      operationId: CompaniesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v2/companies/{id}:
    get:
      operationId: CompaniesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v1/companies/{_id}:
    patch:
      operationId: CompaniesController_update
      parameters:
        - name: _id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyDto'
      responses:
        '200':
          description: ''
      tags: *ref_0
    delete:
      operationId: CompaniesController_remove
      parameters:
        - name: _id
          required: true
          in: path
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v2/companies/{_id}:
    patch:
      operationId: CompaniesController_update
      parameters:
        - name: _id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyDto'
      responses:
        '200':
          description: ''
      tags: *ref_0
    delete:
      operationId: CompaniesController_remove
      parameters:
        - name: _id
          required: true
          in: path
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v1/users:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags: &ref_1
        - User
    get:
      operationId: UsersController_findAll
      parameters:
        - name: current
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
        - name: sort
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
  /api/v2/users:
    post:
      operationId: UsersController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
      tags: *ref_1
    get:
      operationId: UsersController_findAll
      parameters:
        - name: current
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
        - name: sort
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
  /api/v1/users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      tags: *ref_1
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
  /api/v2/users/{id}:
    get:
      operationId: UsersController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
    patch:
      operationId: UsersController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      tags: *ref_1
    delete:
      operationId: UsersController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
  /api/v1/auth/sign-up:
    post:
      operationId: AuthController_signUp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupDto'
      responses:
        '201':
          description: ''
      tags: &ref_2
        - Auth
  /api/v2/auth/sign-up:
    post:
      operationId: AuthController_signUp
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupDto'
      responses:
        '201':
          description: ''
      tags: *ref_2
  /api/v1/auth/sign-in:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags: *ref_2
  /api/v2/auth/sign-in:
    post:
      operationId: AuthController_signIn
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags: *ref_2
  /api/v1/auth/me:
    get:
      operationId: AuthController_handleGetAccount
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_2
  /api/v2/auth/me:
    get:
      operationId: AuthController_handleGetAccount
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_2
  /api/v1/auth/refresh-token:
    get:
      operationId: AuthController_handleRefreshToken
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_2
  /api/v2/auth/refresh-token:
    get:
      operationId: AuthController_handleRefreshToken
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_2
  /api/v1/auth/logout:
    post:
      operationId: AuthController_handleLogout
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_2
  /api/v2/auth/logout:
    post:
      operationId: AuthController_handleLogout
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_2
  /api/v1/files/upload:
    post:
      operationId: FilesController_uploadFile
      parameters: []
      responses:
        '201':
          description: ''
      tags: &ref_3
        - File
  /api/v2/files/upload:
    post:
      operationId: FilesController_uploadFile
      parameters: []
      responses:
        '201':
          description: ''
      tags: *ref_3
  /api/v1/files:
    post:
      operationId: FilesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileDto'
      responses:
        '201':
          description: ''
      tags: *ref_3
    get:
      operationId: FilesController_findAll
      parameters:
        - name: current
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_3
  /api/v2/files:
    post:
      operationId: FilesController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileDto'
      responses:
        '201':
          description: ''
      tags: *ref_3
    get:
      operationId: FilesController_findAll
      parameters:
        - name: current
          required: true
          in: query
          schema:
            type: number
        - name: pageSize
          required: true
          in: query
          schema:
            type: number
      responses:
        '200':
          description: ''
      tags: *ref_3
  /api/v1/files/{id}:
    get:
      operationId: FilesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_3
    patch:
      operationId: FilesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileDto'
      responses:
        '200':
          description: ''
      tags: *ref_3
    delete:
      operationId: FilesController_remove
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_3
  /api/v2/files/{id}:
    get:
      operationId: FilesController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_3
    patch:
      operationId: FilesController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileDto'
      responses:
        '200':
          description: ''
      tags: *ref_3
    delete:
      operationId: FilesController_remove
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_3
info:
  title: NestJS API
  description: The simple Nest API description
  version: '1.0'
  contact: {}
tags:
  - name: Nest
    description: ''
servers: []
components:
  schemas:
    CreateCompanyDto:
      type: object
      properties:
        name:
          type: string
          description: Name of company
          example: Company 1
        address:
          type: string
          description: Address of company
          example: 123/4/5 Nguyen Van Linh
        description:
          type: string
          description: Description of company
          example: Company 1 is a company
      required:
        - name
        - address
        - description
    UpdateCompanyDto:
      type: object
      properties: {}
    SchemaObjectId:
      type: object
      properties: {}
    CompanyDto:
      type: object
      properties:
        _id:
          description: Company ID
          example: 60f2e3f7d1c7d2b6f4c6e
          allOf:
            - $ref: '#/components/schemas/SchemaObjectId'
        name:
          type: string
          description: Company name
          example: Company 1
      required:
        - _id
        - name
    CreateUserDto:
      type: object
      properties:
        name:
          type: string
          description: User name
          example: User 1
        email:
          type: string
          description: User email
          example: test@gmail.com
        password:
          type: string
          description: User password
          example: '123456'
        age:
          type: number
          description: User age
          minimum: 1
          example: 20
        gender:
          type: string
          description: User gender
          example: Male
        address:
          type: string
          description: User address
          example: Hanoi
        role:
          type: string
          description: User role
          example: Admin
        company:
          description: User company
          allOf:
            - $ref: '#/components/schemas/CompanyDto'
      required:
        - name
        - email
        - password
        - age
        - gender
        - address
        - role
        - company
    UpdateUserDto:
      type: object
      properties:
        _id:
          type: string
          description: User id
          example: '123456'
      required:
        - _id
    SignupDto:
      type: object
      properties:
        name:
          type: string
          description: User name
          example: User 1
        email:
          type: string
          description: User email
          example: test@gmail.com
        password:
          type: string
          description: User password
          example: '123456'
        age:
          type: number
          description: User age
          minimum: 1
          example: 20
        gender:
          type: string
          description: User gender
          example: Male
        address:
          type: string
          description: User address
          example: Hanoi
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
        - name
        - email
        - password
        - age
        - gender
        - address
        - createdAt
        - updatedAt
    LoginDto:
      type: object
      properties:
        email:
          type: string
          description: User email
          example: test@gmail.com
        password:
          type: string
          description: User password
          example: '123456'
      required:
        - email
        - password
    CreateFileDto:
      type: object
      properties:
        name:
          type: string
          description: Name of file
          example: File
        skills:
          description: Skill of file
          example: Skill
          type: array
          items:
            type: string
        company:
          type: object
          description: Company
          example: &ref_4
            _id: 60f1b6b3b3b3b3b3b3b3b3b3
            name: Company 1
        location:
          type: string
          description: Location of file
          example: Location
        salary:
          type: number
          description: Salary of file
          example: 1000
        quantity:
          type: number
          description: Quantity of file
          example: 100
        level:
          type: string
          description: Level of file
          example: Level
        description:
          type: string
          description: Description of file
          example: Description
        startDate:
          format: date-time
          type: string
          description: Start date of file
          example: '2021-07-17T00:00:00.000Z'
        endDate:
          format: date-time
          type: string
          description: End date of file
          example: '2021-07-17T00:00:00.000Z'
        isActive:
          type: boolean
          description: Is active
          example: true
      required:
        - name
        - skills
        - company
        - location
        - salary
        - quantity
        - level
        - startDate
        - endDate
        - isActive
    UpdateFileDto:
      type: object
      properties:
        name:
          type: string
          description: Name of file
          example: File
        skills:
          description: Skill of file
          example: Skill
          type: array
          items:
            type: string
        company:
          type: object
          description: Company
          example: *ref_4
        location:
          type: string
          description: Location of file
          example: Location
        salary:
          type: number
          description: Salary of file
          example: 1000
        quantity:
          type: number
          description: Quantity of file
          example: 100
        level:
          type: string
          description: Level of file
          example: Level
        description:
          type: string
          description: Description of file
          example: Description
        startDate:
          format: date-time
          type: string
          description: Start date of file
          example: '2021-07-17T00:00:00.000Z'
        endDate:
          format: date-time
          type: string
          description: End date of file
          example: '2021-07-17T00:00:00.000Z'
        isActive:
          type: boolean
          description: Is active
          example: true
